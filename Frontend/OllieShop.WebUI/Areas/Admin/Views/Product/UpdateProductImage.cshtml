@model UpdateProductImageDto

@{
    ViewData["Title"] = "UpdateProductImage";
    Layout = "~/Areas/Admin/Views/AdminLayout/Index.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Products /</span> Update Product Images</h4>

    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Update Product Images</h5>
                    <small class="text-muted float-end">Products</small>
                </div>
                <div class="card-body">
                    <form method="post" id="updateImagesForm">

                        <input type="hidden" asp-for="ProductId" value="@ViewBag.ProductId" />
                        <input type="hidden" asp-for="ProductImagesId" value="@Model.ProductImagesId" />

                        <div id="imageInputs">
                            @for (int i = 0; i < Model.Images.Count; i++)
                            {
                                <div class="mb-3" id="imageInput_@i">
                                    <label class="form-label" for="images_@i">Image @(i + 1)</label>
                                    <div class="input-group">
                                        <input type="text" asp-for="Images[i]" class="form-control" name="Images[@i]" value="@Model.Images[i]" />
                                        @if (i >= 4)
                                        {
                                            <button type="button" class="btn btn-outline-danger" onclick="removeImageInput(@i)">Remove</button>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                        <button type="button" class="btn btn-secondary" id="addImageButton" onclick="addImageInput()">Add Another Image</button>

                        <button type="submit" class="btn btn-primary">Update</button>
                    </form>
                </div>
            </div>
        </div>

        @await Component.InvokeAsync("_ProductImagesUpdateComponentPartial", new {id = ViewBag.ProductId})
    </div>
</div>

<script>
    let imageIndex = @Model.Images.Count;

    function addImageInput() {
        if (imageIndex >= 10) return;

        const container = document.getElementById('imageInputs');
        const newInputDiv = document.createElement('div');
        newInputDiv.classList.add('mb-3');
        newInputDiv.id = `imageInput_${imageIndex}`;
        newInputDiv.innerHTML = `
                <label class="form-label" for="images_${imageIndex}">Image ${imageIndex + 1}</label>
                <div class="input-group">
                    <input type="text" name="Images[${imageIndex}]" class="form-control" id="images_${imageIndex}" placeholder="Enter image URL" />
                    <button type="button" class="btn btn-outline-danger" onclick="removeImageInput(${imageIndex})">Remove</button>
                </div>
            `;
        container.appendChild(newInputDiv);
        imageIndex++;

        if (imageIndex >= 10) {
            document.getElementById('addImageButton').disabled = true;
        }
    }

    function removeImageInput(index) {
        const inputToRemove = document.getElementById(`imageInput_${index}`);
        if (inputToRemove && index >= 4) {
            inputToRemove.remove();
            imageIndex--;

            // Enable the "Add Another Image" button when a slot is freed up
            if (imageIndex < 10) {
                document.getElementById('addImageButton').disabled = false;
            }
        }
    }
</script>
